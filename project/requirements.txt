# Nepmoney - Personal Finance Tracker
# Requirements and Dependencies

## System Requirements
- Node.js >= 16.0.0
- npm >= 8.0.0 or yarn >= 1.22.0
- Modern web browser (Chrome, Firefox, Safari, Edge)

## Frontend Dependencies (React/TypeScript)
@types/node@^24.2.1
@types/react@^18.3.5
@types/react-dom@^18.3.0
@vitejs/plugin-react@^4.3.1
autoprefixer@^10.4.18
bcryptjs@^3.0.2
clsx@^2.1.1
cors@^2.8.5
date-fns@^4.1.0
eslint@^9.9.1
eslint-plugin-react-hooks@^5.1.0-rc.0
eslint-plugin-react-refresh@^0.4.11
express@^5.1.0
globals@^15.9.0
jsonwebtoken@^9.0.2
lucide-react@^0.539.0
postcss@^8.4.35
react@^18.3.1
react-dom@^18.3.1
react-hot-toast@^2.5.2
recharts@^3.1.2
tailwind-merge@^3.3.1
tailwindcss@^3.4.1
typescript@^5.5.3
typescript-eslint@^8.3.0
vite@^5.4.2

## Development Tools
@eslint/js@^9.9.1

## Installation Commands
# Install all dependencies
npm install

# Start development server
npm run dev

# Build for production
npm run build

# Run linting
npm run lint

# Preview production build
npm run preview

## Demo Credentials
Username: demo
Password: demo123

## Features Included
- ✅ Expense tracking with categories
- ✅ Investment portfolio with fake NPSE stocks
- ✅ Interactive charts and visualizations
- ✅ Responsive design (mobile, tablet, desktop)
- ✅ Data export functionality (CSV, JSON)
- ✅ Real-time stock price simulation
- ✅ Dashboard with financial overview
- ✅ Search and filter capabilities
- ✅ Modern UI with blue-white theme
- ✅ Toast notifications
- ✅ Loading states and animations
- ✅ LocalStorage data persistence

## Browser Support
- Chrome (latest)
- Firefox (latest)
- Safari (latest)
- Edge (latest)

## Project Structure
src/
├── components/          # React components
│   ├── auth/           # Authentication
│   ├── dashboard/      # Dashboard components
│   ├── expenses/       # Expense tracking
│   ├── investments/    # Investment portfolio
│   ├── layout/         # Layout components
│   ├── settings/       # Settings page
│   └── ui/            # Reusable UI components
├── contexts/           # React Context providers
├── lib/               # Utilities and helpers
├── types/             # TypeScript definitions
└── main.tsx          # Entry point

## Quick Start
1. Clone the repository
2. Run: npm install
3. Run: npm run dev
4. Open: http://localhost:5173
5. Login with demo/demo123

## Notes
- No backend server required (uses localStorage)
- All stock data is simulated for demo purposes
- Includes 50+ mock expense transactions
- Features 10 realistic NPSE bank stocks
- Responsive design optimized for all screen sizes
- Production-ready code with TypeScript